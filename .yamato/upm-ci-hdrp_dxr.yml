editors:
  - version: trunk
    cmd: -u trunk
  - version: fast-trunk
    cmd: -u trunk --fast
platforms:
  - name: Win
    type: Unity::VM::GPU
    image: sdet/gamecode_win10:stable
    flavor: b1.large
#  - name: Linux
#    type: Unity::VM::GPU
#    image: cds-ops/ubuntu-18.04-base:latest
#    flavor: b1.large
# Not sure if Linux supports DXR
testplatforms:
  - name: Standalone
    args: --suite=playmode --platform=Standalone
  - name: playmode
    args: --suite=playmode
projects:
  - name: HDRP_DXR
    folder: HDRP_DXR_Tests
win_apis:
  - name: DX12
    cmd: -force-d3d12
#linux_apis:
#  - name: OpenGLCore
#    cmd: -force-glcore
#  - name: Vulkan
#    cmd: -force-vulkan
---
{% for project in projects %}
{% for editor in editors %}
{% for platform in platforms %}

{% if platform.name == "Win" %}

{% for testplatform in testplatforms %}
{% for win_api in win_apis %}
{{ project.name }}_Win_{{ win_api.name }}_{{ testplatform.name }}_{{ editor.version }}:
  name : {{ project.name }} on Win_{{ testplatform.name }}_{{ win_api.name }} on version {{ editor.version }}
  agent:
    type: {{ platform.type }}
    model: rtx2080
    image: {{ platform.image }}
    flavor: {{ platform.flavor}}
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git TestProjects/{{ project.folder }}/utr
    - npm install upm-ci-utils -g --registry https://api.bintray.com/npm/unity/unity-npm
    - pip install unity-downloader-cli --extra-index-url https://artifactory.eu-cph-1.unityops.net/api/pypi/common-python/simple
    - cd TestProjects/{{ project.folder }} && unity-downloader-cli {{ editor.cmd }} -c editor --wait --published    

    {% if testplatform.name == "Standalone" %}
    - cd TestProjects/{{ project.folder }} && utr\utr {{ testplatform.args }}Windows64 --extra-editor-arg="-executemethod" --extra-editor-arg="CustomBuild.BuildWindows{{ win_api.name }}Linear" --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results --timeout=1200
    {% else %}
    - cd TestProjects/{{ project.folder }} && utr\utr {{ testplatform.args }} --extra-editor-arg="{{ win_api.cmd }}" --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results
    {% endif %}
  artifacts:
    logs:
      paths:
        - "**/test-results/**"
{% endfor %}    
{% endfor %}

# {% elsif platform.name == "Linux" %}

# {% for testplatform in testplatforms %}
# {% for linux_api in linux_apis %}
# # Separate block for linux, because the linux agents currently need extra configuration
# {{ project.name }}_Linux_{{ linux_api.name }}_{{ testplatform.name }}_{{ editor.version }}:
  # name : {{ project.name }} on Linux_{{ linux_api.name }}_{{ testplatform.name }} on version {{ editor.version }}
  # agent:
    # {% if testplatform.name == "editmode" %}
    # type: Unity::VM
    # {% else %}
    # type: {{ platform.type }}
    # {% endif %} 
    # image: {{ platform.image }}      
    # flavor: {{ platform.flavor }}
  # commands:
    # - sudo -H pip install --upgrade pip
    # - sudo -H pip install unity-downloader-cli --extra-index-url https://artifactory.eu-cph-1.unityops.net/api/pypi/common-python/simple
    # - sudo npm install upm-ci-utils -g --registry https://api.bintray.com/npm/unity/unity-npm
    # - git clone git@github.cds.internal.unity3d.com:unity/utr.git TestProjects/{{ project.folder }}/utr
    # - cd TestProjects/{{ project.folder }} && sudo unity-downloader-cli {{ editor.cmd }} -c editor --wait --published
    # {% if testplatform.name == "Standalone" %}
    # - cd TestProjects/{{ project.folder }} && DISPLAY=:0.0 utr/utr {{ testplatform.args }}Linux64 --extra-editor-arg="-executemethod" --extra-editor-arg="CustomBuild.BuildLinux{{ linux_api.name }}Linear" --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results
    # {% else %}
    # - cd TestProjects/{{ project.folder }} && DISPLAY=:0.0 utr/utr --extra-editor-arg="{{ linux_api.cmd }}"  {{ testplatform.args }} --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results
    # {% endif %}
  # artifacts:
    # logs:
      # paths:
        # - "**/upm-ci~/test-results/**/*"  
# {% endfor %}   
# {% endfor %}

{% endif %}
{% endfor %}
{% endfor %}

All_{{ project.name }}:
  name: All {{ project.name }} CI
  agent:
    name: whatever
    type: Unity::VM
    image: cds-ops/ubuntu-18.04-agent:latest
    flavor: b1.small
  commands:
    - dir
  dependencies:
  {% for platform in platforms %}
  {% for testplatform in testplatforms %}
  {% for win_api in win_apis %}
  {% if win_api.name == "DX12" %}
  #skip
  {% else %}
    - .yamato/upm-ci-{{ project.name | downcase }}.yml#{{ project.name }}_Win_{{ win_api.name }}_{{ testplatform.name }}_trunk
  {% endfor %}
  {% endfor %}
  {% endfor %}
  
{% endfor %}